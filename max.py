import math, random
k = [[0, 13, 1, 0], [1, 0, 0, 0], [2, 12, 1, 0], [4, 3, 2, 0], [0, 10, 1, 0], [0, 1, 0, 0], [0, 2, 0, 1], [0, 3, 0, 2], [0, 4, 0, 3], [0, 5, 0, 3], [0, 6, 1, 3], [0, 7, 1, 3], [0, 8, 1, 2], [0, 9, 1, 1], [2, 1, 0, 0], [3, 5, 0, 3], [3, 3, 0, 2], [2, 3, 0, 2], [1, 3, 0, 2], [2, 4, 0, 3], [2, 5, 0, 3], [2, 6, 1, 3], [1, 8, 1, 2], [2, 7, 1, 3], [2, 8, 1, 2], [2, 9, 1, 1], [3, 7, 1, 3], [3, 6, 1, 3], [1, 9, 1, 1], [1, 10, 1, 0], [1, 1, 0, 0], [1, 4, 0, 3], [2, 2, 0, 1], [1, 5, 0, 3], [1, 7, 1, 3], [3, 4, 0, 3], [1, 2, 0, 1], [3, 2, 0, 1], [1, 6, 1, 3], [3, 1, 0, 0], [2, 10, 1, 0], [0, 12, 1, 0], [3, 8, 1, 2], [0, 11, 1, 0], [3, 9, 1, 1], [3, 10, 1, 0], [0, 0, 0, 0], [1, 11, 1, 0], [1, 13, 1, 0], [1, 12, 1, 0], [2, 11, 1, 0]]
v = [[0, 13, 1, 0], [1, 0, 0, 0], [2, 12, 1, 0], [4, 3, 2, 0], [0, 10, 1, 0], [0, 1, 0, 0], [0, 2, 0, 1], [0, 3, 0, 2], [0, 4, 0, 3], [0, 5, 0, 3], [0, 6, 1, 3], [0, 7, 1, 3], [0, 8, 1, 2], [0, 9, 1, 1], [2, 1, 0, 0], [3, 5, 0, 3], [3, 3, 0, 2], [2, 3, 0, 2], [1, 3, 0, 2], [2, 4, 0, 3], [2, 5, 0, 3], [2, 6, 1, 3], [1, 8, 1, 2], [2, 7, 1, 3], [2, 8, 1, 2], [2, 9, 1, 1], [3, 7, 1, 3], [3, 6, 1, 3], [1, 9, 1, 1], [1, 10, 1, 0], [1, 1, 0, 0], [1, 4, 0, 3], [2, 2, 0, 1], [1, 5, 0, 3], [1, 7, 1, 3], [3, 4, 0, 3], [1, 2, 0, 1], [3, 2, 0, 1], [1, 6, 1, 3], [3, 1, 0, 0], [2, 10, 1, 0], [0, 12, 1, 0], [3, 8, 1, 2], [0, 11, 1, 0], [3, 9, 1, 1], [3, 10, 1, 0], [0, 0, 0, 0], [1, 11, 1, 0], [1, 13, 1, 0], [1, 12, 1, 0], [2, 11, 1, 0]]

def distance(i):
    #return index that causes greatest distance from i
    length = 1.8
    distance = 0
    m = 0
    r1, c1, h1, f1 = i

    for h in range(len(v)):
        
        if v[h] != None:
            r2, c2, h2, f2 = v[h]
            if r1 == r2:
                diff = abs(c1 - c2)
            elif c1 == c2:
                diff = abs(r1 - r2)
            else:
                a = abs(r1 - r2)
                b = abs(c1 - c2)
                diff = math.sqrt((a**2) + (b**2))
            distance = length * (diff * float(w))
            if distance > m:
                m = distance
                d = h
    return d, m

def findMax():
    max_d = 0
    for i in range(len(k)):
        pos = k[i]
        d, dist = distance(pos)
        v[d] = None
        max_d += dist
        print pos, v
    return max_d

key_lhf = {0: [0, 13, 1, 0], 1: [1, 0, 0, 0], 2: [2, 12, 1, 0], 3: [4, 3, 2, 0], 4: [0, 10, 1, 0], 5: [0, 1, 0, 0], 6: [0, 2, 0, 1], 7: [0, 3, 0, 2], 
8: [0, 4, 0, 3], 9: [0, 5, 0, 3], 10: [0, 6, 1, 3], 11: [0, 7, 1, 3], 12: [0, 8, 1, 2], 13: [0, 9, 1, 1], 14: [2, 1, 0, 0], 15: [3, 5, 0, 3], 
16: [3, 3, 0, 2], 17: [2, 3, 0, 2], 18: [1, 3, 0, 2], 19: [2, 4, 0, 3], 20: [2, 5, 0, 3], 21: [2, 6, 1, 3], 22: [1, 8, 1, 2], 23: [2, 7, 1, 3], 
24: [2, 8, 1, 2], 25: [2, 9, 1, 1], 26: [3, 7, 1, 3], 27: [3, 6, 1, 3], 28: [1, 9, 1, 1], 29: [1, 10, 1, 0], 30: [1, 1, 0, 0], 31: [1, 4, 0, 3], 
32: [2, 2, 0, 1], 33: [1, 5, 0, 3], 34: [1, 7, 1, 3], 35: [3, 4, 0, 3], 36: [1, 2, 0, 1], 37: [3, 2, 0, 1], 38: [1, 6, 1, 3], 39: [3, 1, 0, 0], 
40: [2, 10, 1, 0], 41: [0, 12, 1, 0], 42: [3, 8, 1, 2], 43: [0, 11, 1, 0], 44: [3, 9, 1, 1], 45: [3, 10, 1, 0], 46: [0, 0, 0, 0], 47: [1, 11, 1, 0], 
48: [1, 13, 1, 0], 49: [1, 12, 1, 0], 50: [2, 11, 1, 0]}

def distance(l, f):
    distance = 0
    length = 1.8
    homerow = [[28, 29, 30, 31], [34, 35, 36, 37], [50]]

    for i in range(len(f)):
        w = (1/(1 + i))
        krow, kcol, kh, kf = key_lhf[l.index(f[i])]
        hrow, hcol, hh, hf = key_lhf[homerow[kh][kf]]
        if hrow == krow and hcol == kcol:
            diff = 0
        elif hrow == krow:
            diff = abs(hcol - kcol)
        elif hcol == kcol:
            diff = abs(hrow - krow)
        else:
            a = abs(hrow - krow)
            b = abs(hcol - kcol)
            diff = math.sqrt((a**2) + (b**2))
        distance += length * (diff * w)

    return distance

f = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]
w = [50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
r = random.sample(range(51), 51)
print distance(f, f)